[
  {
    "name": "Azure REST API",
    "scope": "Azure",
    "services": []
  },
  {
    "name": "VSTS REST API",
    "scope": "VSTS",
    "services": [
      {
        "name": "Accounts",
        "url": "https://docs.microsoft.com/en-us/rest/api/vsts/account/",
        "description": "Each person using Visual Studio Team Services has access to one or more accounts."
      },
      {
        "name": "Build",
        "url": "https://docs.microsoft.com/en-us/rest/api/vsts/build/",
        "description": ""
      },
      {
        "name": "Cloud Load Test",
        "url": "https://docs.microsoft.com/en-us/rest/api/vsts/clt/",
        "description": "This API provides a test infrastructure in the cloud to execute web load tests at a high scale and reliability without requiring any upfront setup, configuration or provisioning tax."
      },
      {
        "name": "Core",
        "url": "https://docs.microsoft.com/en-us/rest/api/vsts/core/",
        "description": "A Visual Studio Team Services account has one or more team projects. Each team project has one or more teams that contribute to that project."
      },
      {
        "name": "Dashboard",
        "url": "https://docs.microsoft.com/en-us/rest/api/vsts/dashboard/",
        "description": "Each team in Visual Studio Team Services (VSTS) can have one or more dashboards. Each dashboard contains one or more widgets. "
      },
      {
        "name": "Feed",
        "url": "https://docs.microsoft.com/en-us/rest/api/vsts/packaging/",
        "description": "You can create feeds and store packages in those feeds.\nFeeds have permissions which control who can read from, push to, and manage feeds."
      },
      {
        "name": "Git",
        "url": "https://docs.microsoft.com/en-us/rest/api/vsts/git/",
        "description": "Use these APIs to work with Git repositories in Visual Studio Team Services (VSTS).\nRepositories contain objects representing core Git concepts:"
      },
      {
        "name": "Graph",
        "url": "https://docs.microsoft.com/en-us/rest/api/vsts/graph/",
        "description": "The VSTS Graph API allows you to manage users, groups, and group memberships."
      },
      {
        "name": "Member Entitlement Management",
        "url": "https://docs.microsoft.com/en-us/rest/api/vsts/memberentitlementmanagement/",
        "description": "Use these APIs to manage members in Visual Studio Team Services. A member is a user or a group added to an account."
      },
      {
        "name": "Notification",
        "url": "https://docs.microsoft.com/en-us/rest/api/vsts/notification/",
        "description": "Notifications help teams stay informed about activity in their Team Services projects. With notifications, users and teams are notified when changes occur to work items, code reviews, pull requests, source control files, and builds. For example, you can get notified whenever a bug that you opened is resolved or a work item is assigned to you. The primary delivery channel for notifications today is email. Learn more about notifications."
      },
      {
        "name": "Policy",
        "url": "https://docs.microsoft.com/en-us/rest/api/vsts/policy/",
        "description": "If you haven???t already, look at the information on getting started with these APIs and our documentation on branch policies. Use these APIs to define policies for your projects. \nConfigurationsassociate a type, such as &quot;Required reviewers&quot;, with specific settings, such as  &quot;For pull requests with files named *.dll targeting the master branch in the Fabrikam Git repository, add the Source-Controlled Binaries Team as a required reviewer&quot;. "
      },
      {
        "name": "Profile",
        "url": "https://docs.microsoft.com/en-us/rest/api/vsts/profile/",
        "description": "Each person using Visual Studio Team Services has a profile."
      },
      {
        "name": "Release",
        "url": "https://docs.microsoft.com/en-us/rest/api/vsts/release/",
        "description": "Using on-premises: An earlier, and slightly different, version of this Release Management API is available in Team Foundation Server 2015 Update 2. To use, you must specify an API version of 2.2-preview.1."
      },
      {
        "name": "Search",
        "url": "https://docs.microsoft.com/en-us/rest/api/vsts/search/",
        "description": "The Search APIs enable you to search Code or Work Items across all the projects, teams and repositories to which you have access. Look up the documentation to learn more about Search and its capabilities. Use the APIs to further extend or supplement these capabilities as required."
      },
      {
        "name": "Security",
        "url": "https://docs.microsoft.com/en-us/rest/api/vsts/security/",
        "description": "Data stored in security namespaces are used to determine whether an user has permissions to perform a specific action on a specific resource."
      },
      {
        "name": "Service Hooks",
        "url": "https://docs.microsoft.com/en-us/rest/api/vsts/hooks/",
        "description": "The service hook publishers define a set of events. You create subscriptions based on an event and select the \nservice hook consumer and action to take in response to that event from the publisher."
      },
      {
        "name": "Symbol",
        "url": "https://docs.microsoft.com/en-us/rest/api/vsts/symbol/",
        "description": "Use these APIs to work with a Team Foundation managed Symbol Service."
      },
      {
        "name": "Test",
        "url": "https://docs.microsoft.com/en-us/rest/api/vsts/test/",
        "description": "A test case describes the steps to take when you run a test.\nTest suites are groups of test cases, and a test plan is the collection of test suites that need to be run for a particular iteration or release.\nTest points are the pairings of test cases with test configurations that need to be run for the test plan.\nA test run consists of a set of test points. The results are the outcome of running the tests in the test run."
      },
      {
        "name": "Tfvc",
        "url": "https://docs.microsoft.com/en-us/rest/api/vsts/tfvc/",
        "description": "Items are files and folders in version control.\nChangesets and shelvesets represent changes to a set of items.\nFolders can be branched and items can be labelled."
      },
      {
        "name": "Work",
        "url": "https://docs.microsoft.com/en-us/rest/api/vsts/work/",
        "description": "Team projects have one or more teams that contribute to that project. This API enables editing of team settings (not project or process settings). "
      },
      {
        "name": "Work Item Tracking",
        "url": "https://docs.microsoft.com/en-us/rest/api/vsts/wit/",
        "description": "Get, create, and update bugs, tasks, and other work items for your team.\nQueries allow you to use the full power of the work item query language to search for and filter work items.\nYou can use the work item query language to get to each work item that satisfies the query.\nWork items retain a full history, and you can get each full revision of the work item, or just the updates that were made in each revision. Work items can also be tagged."
      }
    ]
  },
  {
    "name": "Dynamics 365 Online Management REST API",
    "scope": "Dynamics 365 Online Management",
    "services": [
      {
        "name": "Online Management API Reference",
        "url": "https://docs.microsoft.com/en-us/rest/api/dynamics365/../admin.services.crm.dynamics.com/",
        "description": "Online Management API lets you manage online instances of Customer Engagement in your Office 365 tenants. For detailed overview, see Online Management API for Customer Engagement."
      }
    ]
  },
  {
    "name": "Kaizala REST API",
    "scope": "Kaizala",
    "services": [
      {
        "name": "Kaizala",
        "url": "https://docs.microsoft.com/en-us/rest/api/kaizala.microsoft.com/../../kaizala/",
        "description": "Kaizala enables 3rd party developers to integrate Kaizala into their business processes by providing the ability to perform a curated set of actions in Kaizala using REST based API calls. The scope of the API is for external systems to call the end-point and perform actions on-demand. That is, this will be a PULL model ??? where individual endpoints need to be called to perform specific actions using Kaizala APIs. The PUSH model where Kaizala platform can trigger actions can be configured using webhooks."
      }
    ]
  }
]
